{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Import Libraries & Reading Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#importing libraries used to create dataframe,to do calculations, and machine learning library\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn import preprocessing\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn import metrics\n",
    "from sklearn.model_selection import train_test_split\n",
    "import seaborn as sns\n",
    "\n",
    "\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\", category=FutureWarning)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#reading data\n",
    "\n",
    "test_data = pd.read_csv('https://raw.githubusercontent.com/tiwari91/Housing-Prices/master/test.csv')\n",
    "\n",
    "df = pd.read_csv('https://raw.githubusercontent.com/tiwari91/Housing-Prices/master/train.csv')\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Explorations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count      1460.000000\n",
       "mean     180921.195890\n",
       "std       79442.502883\n",
       "min       34900.000000\n",
       "25%      129975.000000\n",
       "50%      163000.000000\n",
       "75%      214000.000000\n",
       "max      755000.000000\n",
       "Name: SalePrice, dtype: float64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Basic Stats\n",
    "df['SalePrice'].describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a21c523c8>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(df['SalePrice'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "corrmatrix = df.corr()\n",
    "top_features = corrmatrix.index[abs(corrmatrix[\"SalePrice\"])>0.5]\n",
    "plt.figure(figsize=(8,8))\n",
    "graph = sns.heatmap(df[top_features].corr(),annot=True,cmap=\"RdYlGn\")\n",
    "\n",
    "#visually see overall quality is related to price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SalePrice        1.000000\n",
      "OverallQual      0.790982\n",
      "GrLivArea        0.708624\n",
      "GarageCars       0.640409\n",
      "GarageArea       0.623431\n",
      "TotalBsmtSF      0.613581\n",
      "1stFlrSF         0.605852\n",
      "FullBath         0.560664\n",
      "TotRmsAbvGrd     0.533723\n",
      "YearBuilt        0.522897\n",
      "YearRemodAdd     0.507101\n",
      "GarageYrBlt      0.486362\n",
      "MasVnrArea       0.477493\n",
      "Fireplaces       0.466929\n",
      "BsmtFinSF1       0.386420\n",
      "LotFrontage      0.351799\n",
      "WoodDeckSF       0.324413\n",
      "2ndFlrSF         0.319334\n",
      "OpenPorchSF      0.315856\n",
      "HalfBath         0.284108\n",
      "LotArea          0.263843\n",
      "BsmtFullBath     0.227122\n",
      "BsmtUnfSF        0.214479\n",
      "BedroomAbvGr     0.168213\n",
      "ScreenPorch      0.111447\n",
      "PoolArea         0.092404\n",
      "MoSold           0.046432\n",
      "3SsnPorch        0.044584\n",
      "BsmtFinSF2      -0.011378\n",
      "BsmtHalfBath    -0.016844\n",
      "MiscVal         -0.021190\n",
      "Id              -0.021917\n",
      "LowQualFinSF    -0.025606\n",
      "YrSold          -0.028923\n",
      "OverallCond     -0.077856\n",
      "MSSubClass      -0.084284\n",
      "EnclosedPorch   -0.128578\n",
      "KitchenAbvGr    -0.135907\n",
      "Name: SalePrice, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "# features correlation scores\n",
    "\n",
    "correlation = df.corr()\n",
    "correlation.sort_values([\"SalePrice\"], ascending = False, inplace = True)\n",
    "print(correlation.SalePrice)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "#fill NaNs with 0 using pandas\n",
    "df.fillna(0,inplace = True)\n",
    "\n",
    "#drop Id and Sale Price from X columns\n",
    "X = df.drop(['Id','SalePrice'], axis=1)\n",
    "\n",
    "#set X and y for data\n",
    "#feature_cols = list(X.columns)\n",
    "\n",
    "feature_cols = ['OverallQual','GrLivArea','GarageCars', 'TotalBsmtSF', '1stFlrSF', 'FullBath',\n",
    "                'TotRmsAbvGrd','YearBuilt','YearRemodAdd','GarageYrBlt','MasVnrArea','Fireplaces','BsmtFinSF1',\n",
    "               'LotFrontage','WoodDeckSF','2ndFlrSF','OpenPorchSF','HalfBath','LotArea','BsmtFullBath','BsmtUnfSF',\n",
    "               'BedroomAbvGr','ScreenPorch','PoolArea','MoSold','3SsnPorch']\n",
    "\n",
    "X = X[feature_cols]\n",
    "y = df['SalePrice']\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#selecting all numerical cols and categorical columns\n",
    "#num_cols = X._get_numeric_data().columns\n",
    "#cat_cols = list(set(feature_cols) - set(num_cols))\n",
    "\n",
    "#train_cat = X[cat_cols]\n",
    "#train_num = X[num_cols]\n",
    "\n",
    "\n",
    "\n",
    "#convert ONLY categorial dataframe using onehot encoding\n",
    "#train_cat = pd.get_dummies(train_cat)\n",
    "\n",
    "\n",
    "#combine the datagrames\n",
    "#train = pd.concat([train_cat,train_num],axis=1)\n",
    "\n",
    "#convert categorical columns into numerical values using one hot encoding/dummy\n",
    "#X = pd.get_dummies(X, columns = cat_cols, drop_first = True)\n",
    "\n",
    "\n",
    "#normalizing X with Pandas\n",
    "#X = (X - X.mean()) / (X.max() - X.min())\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "#split training set and data\n",
    "\n",
    "X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.25,random_state= 0)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# from sklearn.feature_selection import SelectKBest\n",
    "#from sklearn.feature_selection import f_regression Feature extraction\n",
    "#test = SelectKBest(score_func=f_regression, k=5)\n",
    "#fit = test.fit(X_train, y_train)\n",
    "\n",
    "# Summarize scores\n",
    "#np.set_printoptions(precision=4)\n",
    "#print(fit.scores_)\n",
    "\n",
    "#features = fit.transform(X_train)\n",
    "\n",
    "# Summarize selected features\n",
    "#top_features = features[0:6,:]\n",
    "#print(top_features)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Intercept:  -1121149.2201959451\n"
     ]
    }
   ],
   "source": [
    "# In the following line, \"my_linreg\" is instantiated as an \"object\" of LinearRegression \"class\". \n",
    "\n",
    "my_linreg = LinearRegression()\n",
    "\n",
    "# fitting the model to the training data:\n",
    "my_linreg.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "#Check CoEfficients Theta0 \n",
    "print(\"Intercept: \", my_linreg.intercept_)\n",
    "\n",
    "# print the thetas\n",
    "#print(\"Coef: \",my_linreg.coef_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# make predictions on the testing set\n",
    "y_prediction = my_linreg.predict(X_test)\n",
    "\n",
    "#print(\"Prediction: \", y_prediction)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSE:  45880.424467607896\n",
      "MAX Y: 797174.7707566221\n",
      "MIN Y: 45288.99247129937\n"
     ]
    }
   ],
   "source": [
    "mse = metrics.mean_squared_error(y_test, y_prediction)\n",
    "\n",
    "# Using numpy sqrt function to take the square root and calculate \"Root Mean Square Error\" (RMSE)\n",
    "rmse = np.sqrt(mse)\n",
    "\n",
    "print(\"RMSE: \",rmse)\n",
    "\n",
    "print(\"MAX Y:\",y_prediction.max())\n",
    "print(\"MIN Y:\",y_prediction.min())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'LogisticRegression' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-18-f0420c415c19>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmy_logreg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLogisticRegression\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# function cross_val_score performs Cross Validation:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0maccuracy_list\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcross_val_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmy_logreg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcv\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscoring\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'accuracy'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'LogisticRegression' is not defined"
     ]
    }
   ],
   "source": [
    "my_logreg = LogisticRegression()\n",
    "\n",
    "# function cross_val_score performs Cross Validation:\n",
    "accuracy_list = cross_val_score(my_logreg, X_train, y_train, cv=10, scoring='accuracy')\n",
    "\n",
    "#print(accuracy_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'accuracy_list' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-19-a1487834ab22>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# use average of accuracy values as final result\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0maccuracy_cv\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maccuracy_list\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maccuracy_cv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'accuracy_list' is not defined"
     ]
    }
   ],
   "source": [
    "# use average of accuracy values as final result\n",
    "accuracy_cv = accuracy_list.mean()\n",
    "\n",
    "print(accuracy_cv)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[-9.37777305e+08 -9.42243433e+08 -2.45977263e+09 -1.14280774e+09\n",
      " -9.71941653e+08 -1.08962045e+09 -1.37617308e+09 -1.21082896e+09\n",
      " -7.02221880e+08 -7.29688690e+08]\n"
     ]
    }
   ],
   "source": [
    "# Applying 10-fold cross validation with \"linear regression\":\n",
    "\n",
    "# In the following line, \"my_linreg\" is instantiated as an \"object\" of LinearRegression \"class\". \n",
    "my_linreg = LinearRegression()\n",
    "\n",
    "mse_list = cross_val_score(my_linreg, X_train, y_train, cv=10, scoring='neg_mean_squared_error')\n",
    "\n",
    "print(mse_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[30623.14982742 30695.98399557 49596.09492973 33805.43946096\n",
      " 31175.97878911 33009.39943821 37096.80693679 34796.9676754\n",
      " 26499.46942598 27012.75050808]\n"
     ]
    }
   ],
   "source": [
    "mse_list_positive = -mse_list\n",
    "\n",
    "# using numpy sqrt function to calculate rmse:\n",
    "rmse_list = np.sqrt(mse_list_positive)\n",
    "print(rmse_list)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "33431.20409872582\n"
     ]
    }
   ],
   "source": [
    "print(rmse_list.mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,\n",
       "                      max_features='auto', max_leaf_nodes=None,\n",
       "                      min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "                      min_samples_leaf=1, min_samples_split=2,\n",
       "                      min_weight_fraction_leaf=0.0, n_estimators=1000,\n",
       "                      n_jobs=None, oob_score=False, random_state=0, verbose=0,\n",
       "                      warm_start=False)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "\n",
    "# Instantiate model with 1000 decision trees\n",
    "rf = RandomForestRegressor(n_estimators = 1000, random_state = 0)\n",
    "# Train the model on training data\n",
    "rf.fit(X_train, y_train)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Use the forest's predict method on the test data\n",
    "rf_predictions = rf.predict(X_test)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSE:  31055.472446400447\n"
     ]
    }
   ],
   "source": [
    "mse = metrics.mean_squared_error(y_test, rf_predictions)\n",
    "\n",
    "# Using numpy sqrt function to take the square root and calculate \"Root Mean Square Error\" (RMSE)\n",
    "rmse = np.sqrt(mse)\n",
    "\n",
    "print(\"RMSE: \",rmse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
